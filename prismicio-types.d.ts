// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Content for Kontakt documents
 */
interface KontaktDocumentData {
  /**
   * Adres field in *Kontakt*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: kontakt.address
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  address: prismic.KeyTextField;

  /**
   * Email field in *Kontakt*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: kontakt.email
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  email: prismic.KeyTextField;

  /**
   * Numer telefonu field in *Kontakt*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: kontakt.phone_number
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  phone_number: prismic.KeyTextField;
}

/**
 * Kontakt document from Prismic
 *
 * - **API ID**: `kontakt`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type KontaktDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<KontaktDocumentData>,
    "kontakt",
    Lang
  >;

type PageDocumentDataSlicesSlice =
  | StepsWithIntroSlice
  | HighlightedHeroWithStatisticsSlice
  | MediaGallerySlice
  | ScheduleGridSlice
  | ServicesGridSlice
  | ContactMapFormSlice
  | ContentImageSplitSlice
  | SideBySideImageTextSlice
  | ImageCollageSlice;

/**
 * Content for Page documents
 */
interface PageDocumentData {
  /**
   * Title field in *Page*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: page.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Slice Zone field in *Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<PageDocumentDataSlicesSlice> /**
   * Meta Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

/**
 * Item in *Media Społecznościowe → Linki*
 */
export interface SocialMediaDocumentDataLinksItem {
  /**
   * Nazwa field in *Media Społecznościowe → Linki*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: social_media.links[].name
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  name: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Content for Media Społecznościowe documents
 */
interface SocialMediaDocumentData {
  /**
   * Linki field in *Media Społecznościowe*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: social_media.links[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  links: prismic.GroupField<Simplify<SocialMediaDocumentDataLinksItem>>;
}

/**
 * Media Społecznościowe document from Prismic
 *
 * - **API ID**: `social_media`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SocialMediaDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<SocialMediaDocumentData>,
    "social_media",
    Lang
  >;

export type AllDocumentTypes =
  | KontaktDocument
  | PageDocument
  | SocialMediaDocument;

/**
 * Primary content in *ContactForm → Default → Primary*
 */
export interface ContactMapFormSliceDefaultPrimary {
  /**
   * Title field in *ContactForm → Default → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: contact_map_form.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Description field in *ContactForm → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: contact_map_form.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;
}

/**
 * Default variation for ContactForm Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard layout with left-side map and right-side contact form with title, description, form fields, and button.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ContactMapFormSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ContactMapFormSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ContactForm*
 */
type ContactMapFormSliceVariation = ContactMapFormSliceDefault;

/**
 * ContactForm Shared Slice
 *
 * - **API ID**: `contact_map_form`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ContactMapFormSlice = prismic.SharedSlice<
  "contact_map_form",
  ContactMapFormSliceVariation
>;

/**
 * Primary content in *ContentImageSplit → image_right → Primary*
 */
export interface ContentImageSplitSliceImageRightPrimary {
  /**
   * Heading field in *ContentImageSplit → image_right → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: content_image_split.imageRight.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.TitleField;

  /**
   * Content field in *ContentImageSplit → image_right → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: content_image_split.imageRight.primary.content
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  content: prismic.RichTextField;

  /**
   * Side Image field in *ContentImageSplit → image_right → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: content_image_split.imageRight.primary.side_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  side_image: prismic.ImageField<never>;
}

/**
 * image_right variation for ContentImageSplit Slice
 *
 * - **API ID**: `imageRight`
 * - **Description**: Displays structured text content aligned on the left and an image on the right. Ideal for informative or story sections that benefit from paired visuals.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ContentImageSplitSliceImageRight = prismic.SharedSliceVariation<
  "imageRight",
  Simplify<ContentImageSplitSliceImageRightPrimary>,
  never
>;

/**
 * Primary content in *ContentImageSplit → image_left → Primary*
 */
export interface ContentImageSplitSliceImageLeftPrimary {
  /**
   * Heading field in *ContentImageSplit → image_left → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: content_image_split.imageLeft.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.TitleField;

  /**
   * Content field in *ContentImageSplit → image_left → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: content_image_split.imageLeft.primary.content
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  content: prismic.RichTextField;

  /**
   * Side Image field in *ContentImageSplit → image_left → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: content_image_split.imageLeft.primary.side_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  side_image: prismic.ImageField<never>;
}

/**
 * image_left variation for ContentImageSplit Slice
 *
 * - **API ID**: `imageLeft`
 * - **Description**: Displays structured text content aligned on the left and an image on the right. Ideal for informative or story sections that benefit from paired visuals.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ContentImageSplitSliceImageLeft = prismic.SharedSliceVariation<
  "imageLeft",
  Simplify<ContentImageSplitSliceImageLeftPrimary>,
  never
>;

/**
 * Slice variation for *ContentImageSplit*
 */
type ContentImageSplitSliceVariation =
  | ContentImageSplitSliceImageRight
  | ContentImageSplitSliceImageLeft;

/**
 * ContentImageSplit Shared Slice
 *
 * - **API ID**: `content_image_split`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ContentImageSplitSlice = prismic.SharedSlice<
  "content_image_split",
  ContentImageSplitSliceVariation
>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HighlightedHeroWithStatisticsSliceDefaultPrimary {
  /**
   * Nagłówek field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: highlighted_hero_with_statistics.default.primary.section_title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  section_title: prismic.RichTextField;

  /**
   * Description field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: highlighted_hero_with_statistics.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Image field in *Hero → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: highlighted_hero_with_statistics.default.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * button field in *Hero → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: highlighted_hero_with_statistics.default.primary.button
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default variation with main title, description, image and statistics.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HighlightedHeroWithStatisticsSliceDefault =
  prismic.SharedSliceVariation<
    "default",
    Simplify<HighlightedHeroWithStatisticsSliceDefaultPrimary>,
    never
  >;

/**
 * Slice variation for *Hero*
 */
type HighlightedHeroWithStatisticsSliceVariation =
  HighlightedHeroWithStatisticsSliceDefault;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `highlighted_hero_with_statistics`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HighlightedHeroWithStatisticsSlice = prismic.SharedSlice<
  "highlighted_hero_with_statistics",
  HighlightedHeroWithStatisticsSliceVariation
>;

/**
 * Item in *ImageCollage → Multi-Image Grid → Primary → Images*
 */
export interface ImageCollageSliceMultiImageGridPrimaryImagesItem {
  /**
   * Image field in *ImageCollage → Multi-Image Grid → Primary → Images*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_collage.multi_image_grid.primary.images[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * Primary content in *ImageCollage → Multi-Image Grid → Primary*
 */
export interface ImageCollageSliceMultiImageGridPrimary {
  /**
   * Header field in *ImageCollage → Multi-Image Grid → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: image_collage.multi_image_grid.primary.header
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  header: prismic.KeyTextField;

  /**
   * Images field in *ImageCollage → Multi-Image Grid → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: image_collage.multi_image_grid.primary.images[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  images: prismic.GroupField<
    Simplify<ImageCollageSliceMultiImageGridPrimaryImagesItem>
  >;
}

/**
 * Multi-Image Grid variation for ImageCollage Slice
 *
 * - **API ID**: `multi_image_grid`
 * - **Description**: Displays a configurable group of images in a grid or collage layout, supporting optional captions per image.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageCollageSliceMultiImageGrid = prismic.SharedSliceVariation<
  "multi_image_grid",
  Simplify<ImageCollageSliceMultiImageGridPrimary>,
  never
>;

/**
 * Slice variation for *ImageCollage*
 */
type ImageCollageSliceVariation = ImageCollageSliceMultiImageGrid;

/**
 * ImageCollage Shared Slice
 *
 * - **API ID**: `image_collage`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageCollageSlice = prismic.SharedSlice<
  "image_collage",
  ImageCollageSliceVariation
>;

/**
 * Item in *MediaGallery → Grid Gallery → Primary → Image Gallery*
 */
export interface MediaGallerySliceGridGalleryPrimaryImageGalleryItem {
  /**
   * Image field in *MediaGallery → Grid Gallery → Primary → Image Gallery*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: media_gallery.grid_gallery.primary.image_gallery[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * Primary content in *MediaGallery → Grid Gallery → Primary*
 */
export interface MediaGallerySliceGridGalleryPrimary {
  /**
   * Title field in *MediaGallery → Grid Gallery → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: media_gallery.grid_gallery.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Description field in *MediaGallery → Grid Gallery → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media_gallery.grid_gallery.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Image Gallery field in *MediaGallery → Grid Gallery → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: media_gallery.grid_gallery.primary.image_gallery[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  image_gallery: prismic.GroupField<
    Simplify<MediaGallerySliceGridGalleryPrimaryImageGalleryItem>
  >;

  /**
   * Button field in *MediaGallery → Grid Gallery → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: media_gallery.grid_gallery.primary.button
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Grid Gallery variation for MediaGallery Slice
 *
 * - **API ID**: `grid_gallery`
 * - **Description**: This variation presents images in a grid layout with a prominent title and description above the gallery.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MediaGallerySliceGridGallery = prismic.SharedSliceVariation<
  "grid_gallery",
  Simplify<MediaGallerySliceGridGalleryPrimary>,
  never
>;

/**
 * Slice variation for *MediaGallery*
 */
type MediaGallerySliceVariation = MediaGallerySliceGridGallery;

/**
 * MediaGallery Shared Slice
 *
 * - **API ID**: `media_gallery`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MediaGallerySlice = prismic.SharedSlice<
  "media_gallery",
  MediaGallerySliceVariation
>;

/**
 * Primary content in *ScheduleGrid → Default → Primary*
 */
export interface ScheduleGridSliceDefaultPrimary {
  /**
   * Title field in *ScheduleGrid → Default → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: schedule_grid.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Description field in *ScheduleGrid → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: schedule_grid.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Harmonogram field in *ScheduleGrid → Default → Primary*
   *
   * - **Field Type**: Table
   * - **Placeholder**: *None*
   * - **API ID Path**: schedule_grid.default.primary.harmonogram
   * - **Documentation**: https://prismic.io/docs/field#table
   */
  harmonogram: prismic.TableField;
}

/**
 * Default variation for ScheduleGrid Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard variant with heading, description, and a customizable schedule grid supporting multiple columns (days) and rows (times), and styled events.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ScheduleGridSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ScheduleGridSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ScheduleGrid*
 */
type ScheduleGridSliceVariation = ScheduleGridSliceDefault;

/**
 * ScheduleGrid Shared Slice
 *
 * - **API ID**: `schedule_grid`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ScheduleGridSlice = prismic.SharedSlice<
  "schedule_grid",
  ScheduleGridSliceVariation
>;

/**
 * Item in *ServicesGrid → Standard View → Primary → Oferta*
 */
export interface ServicesGridSliceStandardViewPrimaryServicesItem {
  /**
   * Zdjęcie field in *ServicesGrid → Standard View → Primary → Oferta*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.standard_view.primary.services[].service_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  service_image: prismic.ImageField<never>;

  /**
   * Taniec field in *ServicesGrid → Standard View → Primary → Oferta*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.standard_view.primary.services[].service_title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  service_title: prismic.TitleField;

  /**
   * Tag field in *ServicesGrid → Standard View → Primary → Oferta*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.standard_view.primary.services[].service_tag
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  service_tag: prismic.KeyTextField;

  /**
   * Opis field in *ServicesGrid → Standard View → Primary → Oferta*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.standard_view.primary.services[].service_description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  service_description: prismic.RichTextField;
}

/**
 * Primary content in *ServicesGrid → Standard View → Primary*
 */
export interface ServicesGridSliceStandardViewPrimary {
  /**
   * Nagłówek sekcji field in *ServicesGrid → Standard View → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.standard_view.primary.section_title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  section_title: prismic.TitleField;

  /**
   * Opis field in *ServicesGrid → Standard View → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.standard_view.primary.section_description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  section_description: prismic.RichTextField;

  /**
   * Oferta field in *ServicesGrid → Standard View → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: services_grid.standard_view.primary.services[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  services: prismic.GroupField<
    Simplify<ServicesGridSliceStandardViewPrimaryServicesItem>
  >;
}

/**
 * Standard View variation for ServicesGrid Slice
 *
 * - **API ID**: `standard_view`
 * - **Description**: A grid layout displaying several services with images and text descriptions.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ServicesGridSliceStandardView = prismic.SharedSliceVariation<
  "standard_view",
  Simplify<ServicesGridSliceStandardViewPrimary>,
  never
>;

/**
 * Slice variation for *ServicesGrid*
 */
type ServicesGridSliceVariation = ServicesGridSliceStandardView;

/**
 * ServicesGrid Shared Slice
 *
 * - **API ID**: `services_grid`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ServicesGridSlice = prismic.SharedSlice<
  "services_grid",
  ServicesGridSliceVariation
>;

/**
 * Primary content in *SideBySideImageText → Image(s) with Heading and Text → Primary*
 */
export interface SideBySideImageTextSliceImageTextWithHeadingPrimary {
  /**
   * Heading field in *SideBySideImageText → Image(s) with Heading and Text → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: side_by_side_image_text.image_text_with_heading.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.TitleField;

  /**
   * Body field in *SideBySideImageText → Image(s) with Heading and Text → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: side_by_side_image_text.image_text_with_heading.primary.body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;

  /**
   * Back image field in *SideBySideImageText → Image(s) with Heading and Text → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: side_by_side_image_text.image_text_with_heading.primary.back_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  back_image: prismic.ImageField<never>;

  /**
   * Front image field in *SideBySideImageText → Image(s) with Heading and Text → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: side_by_side_image_text.image_text_with_heading.primary.front_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  front_image: prismic.ImageField<never>;
}

/**
 * Image(s) with Heading and Text variation for SideBySideImageText Slice
 *
 * - **API ID**: `image_text_with_heading`
 * - **Description**: Displays one or more images side-by-side with a heading and body text, allowing layouts that combine visual elements with textual information for emphasis or introduction.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SideBySideImageTextSliceImageTextWithHeading =
  prismic.SharedSliceVariation<
    "image_text_with_heading",
    Simplify<SideBySideImageTextSliceImageTextWithHeadingPrimary>,
    never
  >;

/**
 * Slice variation for *SideBySideImageText*
 */
type SideBySideImageTextSliceVariation =
  SideBySideImageTextSliceImageTextWithHeading;

/**
 * SideBySideImageText Shared Slice
 *
 * - **API ID**: `side_by_side_image_text`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SideBySideImageTextSlice = prismic.SharedSlice<
  "side_by_side_image_text",
  SideBySideImageTextSliceVariation
>;

/**
 * Item in *StepsWithIntro → Default → Primary → Steps*
 */
export interface StepsWithIntroSliceDefaultPrimaryStepsItem {
  /**
   * Step Title field in *StepsWithIntro → Default → Primary → Steps*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: steps_with_intro.default.primary.steps[].step_title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  step_title: prismic.TitleField;

  /**
   * Step Description field in *StepsWithIntro → Default → Primary → Steps*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: steps_with_intro.default.primary.steps[].step_description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  step_description: prismic.RichTextField;
}

/**
 * Primary content in *StepsWithIntro → Default → Primary*
 */
export interface StepsWithIntroSliceDefaultPrimary {
  /**
   * Title field in *StepsWithIntro → Default → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: steps_with_intro.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Description field in *StepsWithIntro → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: steps_with_intro.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Steps field in *StepsWithIntro → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: steps_with_intro.default.primary.steps[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  steps: prismic.GroupField<
    Simplify<StepsWithIntroSliceDefaultPrimaryStepsItem>
  >;
}

/**
 * Default variation for StepsWithIntro Slice
 *
 * - **API ID**: `default`
 * - **Description**: Basic variant with an intro followed by a horizontal step sequence.
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type StepsWithIntroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<StepsWithIntroSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *StepsWithIntro*
 */
type StepsWithIntroSliceVariation = StepsWithIntroSliceDefault;

/**
 * StepsWithIntro Shared Slice
 *
 * - **API ID**: `steps_with_intro`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type StepsWithIntroSlice = prismic.SharedSlice<
  "steps_with_intro",
  StepsWithIntroSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      KontaktDocument,
      KontaktDocumentData,
      PageDocument,
      PageDocumentData,
      PageDocumentDataSlicesSlice,
      SocialMediaDocument,
      SocialMediaDocumentData,
      SocialMediaDocumentDataLinksItem,
      AllDocumentTypes,
      ContactMapFormSlice,
      ContactMapFormSliceDefaultPrimary,
      ContactMapFormSliceVariation,
      ContactMapFormSliceDefault,
      ContentImageSplitSlice,
      ContentImageSplitSliceImageRightPrimary,
      ContentImageSplitSliceImageLeftPrimary,
      ContentImageSplitSliceVariation,
      ContentImageSplitSliceImageRight,
      ContentImageSplitSliceImageLeft,
      HighlightedHeroWithStatisticsSlice,
      HighlightedHeroWithStatisticsSliceDefaultPrimary,
      HighlightedHeroWithStatisticsSliceVariation,
      HighlightedHeroWithStatisticsSliceDefault,
      ImageCollageSlice,
      ImageCollageSliceMultiImageGridPrimaryImagesItem,
      ImageCollageSliceMultiImageGridPrimary,
      ImageCollageSliceVariation,
      ImageCollageSliceMultiImageGrid,
      MediaGallerySlice,
      MediaGallerySliceGridGalleryPrimaryImageGalleryItem,
      MediaGallerySliceGridGalleryPrimary,
      MediaGallerySliceVariation,
      MediaGallerySliceGridGallery,
      ScheduleGridSlice,
      ScheduleGridSliceDefaultPrimary,
      ScheduleGridSliceVariation,
      ScheduleGridSliceDefault,
      ServicesGridSlice,
      ServicesGridSliceStandardViewPrimaryServicesItem,
      ServicesGridSliceStandardViewPrimary,
      ServicesGridSliceVariation,
      ServicesGridSliceStandardView,
      SideBySideImageTextSlice,
      SideBySideImageTextSliceImageTextWithHeadingPrimary,
      SideBySideImageTextSliceVariation,
      SideBySideImageTextSliceImageTextWithHeading,
      StepsWithIntroSlice,
      StepsWithIntroSliceDefaultPrimaryStepsItem,
      StepsWithIntroSliceDefaultPrimary,
      StepsWithIntroSliceVariation,
      StepsWithIntroSliceDefault,
    };
  }
}
